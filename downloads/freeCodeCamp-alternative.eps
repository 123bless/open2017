%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.5 (Build 15F34) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1108 128
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1108 128
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0 0.39215687 0 sc
q
15.1 87.900002 m
5.4000001 87.900002 l
2.0999999 87.900002 0.30000001 89.400002 0.30000001 92.099998 c
0.30000001 95.099998 2.0999999 96.300003 5.4000001 96.300003 c
15.1 96.300003 l
15.1 104.8 l
15.1 119.6 22.700001 126.9 37.5 126.9 c
43.5 126.9 48.700001 125.7 52.599998 123.6 c
57.700001 120.6 60.5 115.7 60.5 110 c
60.5 106.1 59 104.6 56.299999 104.6 c
54.5 104.6 52.700001 105.8 51.799999 107.9 c
50.599998 111.8 49.400002 113.9 48.799999 114.9 c
47 117 43.400002 118.2 38.200001 118.2 c
29.1 118.2 24.6 113.7 24.6 104.6 c
24.6 96.400002 l
42.099998 96.400002 l
46 96.400002 47.799999 94.900002 47.799999 92.199997 c
47.799999 89.199997 46 88 42.099998 88 c
24.6 88 l
24.6 32.700001 l
24.6 29.4 23.1 27.6 20.4 27.6 c
17.4 27.6 16.200001 29.4 16.200001 32.700001 c
16.200001 88 l
15.1 88 l
15.1 87.900002 l
h
15.1 87.900002 m
W*
0 0 1108 128 rc
-4.6999998 131.89999 m
65.5 131.89999 l
65.5 22.6 l
-4.6999998 22.6 l
h
f
Q
q
93.699997 37.5 m
93.699997 88 l
80.699997 88 l
77.099998 88 75.300003 89.5 75.300003 92.199997 c
75.300003 95.199997 77.099998 96.400002 80.699997 96.400002 c
98.199997 96.400002 l
101.2 96.400002 102.7 93.699997 102.7 88.800003 c
108.1 94.5 113.9 97.900002 119.9 97.900002 c
125 97.900002 129 96.400002 131.7 93.400002 c
134.7 90.400002 135.89999 86.099998 135.89999 81.300003 c
135.89999 78 134.39999 76.199997 131.7 76.199997 c
129.89999 76.199997 128.7 77.400002 128.10001 79.5 c
126.9 83.699997 126.3 85.800003 126 86.099998 c
124.8 88.199997 122.4 89.400002 119.4 89.400002 c
116.1 89.400002 112.8 88.199997 110 85.800003 c
108.2 84.599998 105.8 81.900002 102.7 77.900002 c
102.7 37.400002 l
119 37.400002 l
122.6 37.400002 124.4 35.900002 124.4 33.200001 c
124.4 30.200001 122.6 28.700001 119 28.700001 c
80.300003 28.700001 l
76.699997 28.700001 74.900002 30.200001 74.900002 32.900002 c
74.900002 35.900002 76.699997 37.099998 80.300003 37.099998 c
93.599998 37.099998 l
93.599998 37.5 l
93.699997 37.5 l
h
93.699997 37.5 m
W*
0 0 1108 128 rc
69.900002 102.9 m
140.89999 102.9 l
140.89999 23.700001 l
69.900002 23.700001 l
h
f
Q
q
159.89999 61.299999 m
159.89999 51.599998 l
159.89999 41.299999 167.2 36.200001 182 36.200001 c
187.39999 36.200001 191.7 36.799999 195 38 c
196.8 38.599998 199.8 40.099998 204.10001 43.099998 c
206.8 45.5 208.60001 46.700001 209.5 46.700001 c
211.89999 46.700001 213.10001 45.5 213.10001 42.799999 c
213.10001 40.099998 211.3 37.400002 207.7 34.599998 c
202 30.1 193.2 27.6 181.7 27.6 c
161.5 27.6 151.2 35.5 151.2 51.5 c
151.2 75.699997 l
151.2 81.099998 153.3 86 157.5 89.900002 c
162.89999 95.300003 171.39999 97.800003 182.3 97.800003 c
202.2 97.800003 211.89999 87.800003 211.89999 68.199997 c
211.89999 63.400002 210.10001 60.900002 206.5 60.900002 c
160 60.900002 l
160 61.299999 l
159.89999 61.299999 l
h
159.89999 69.800003 m
203.10001 69.800003 l
203.10001 82.800003 195.8 89.400002 181 89.400002 c
175.60001 89.400002 170.7 88.199997 166.5 85.800003 c
162.3 82.800003 159.89999 79.199997 159.89999 74.900002 c
159.89999 69.800003 l
159.89999 69.800003 l
h
159.89999 69.800003 m
W*
0 0 1108 128 rc
146.2 102.8 m
218.10001 102.8 l
218.10001 22.6 l
146.2 22.6 l
h
f
Q
q
235.8 61.299999 m
235.8 51.599998 l
235.8 41.299999 243.10001 36.200001 257.89999 36.200001 c
263.29999 36.200001 267.60001 36.799999 270.89999 38 c
272.70001 38.599998 275.70001 40.099998 280 43.099998 c
282.70001 45.5 284.5 46.700001 285.39999 46.700001 c
287.79999 46.700001 289 45.5 289 42.799999 c
289 40.099998 287.20001 37.400002 283.60001 34.599998 c
277.89999 30.1 269.10001 27.6 257.60001 27.6 c
237.39999 27.6 227.10001 35.5 227.10001 51.5 c
227.10001 75.699997 l
227.10001 81.099998 229.2 86 233.39999 89.900002 c
238.8 95.300003 247.3 97.800003 258.20001 97.800003 c
278.10001 97.800003 287.79999 87.800003 287.79999 68.199997 c
287.79999 63.400002 286 60.900002 282.39999 60.900002 c
235.89999 60.900002 l
235.89999 61.299999 l
235.8 61.299999 l
h
235.8 69.800003 m
279 69.800003 l
279 82.800003 271.70001 89.400002 256.89999 89.400002 c
251.5 89.400002 246.60001 88.199997 242.39999 85.800003 c
237.89999 82.800003 235.8 79.199997 235.8 74.900002 c
235.8 69.800003 l
235.8 69.800003 l
h
235.8 69.800003 m
W*
0 0 1108 128 rc
222.10001 102.8 m
294 102.8 l
294 22.6 l
222.10001 22.6 l
h
f
Q
q
303.79999 55.599998 m
303.79999 93.400002 l
303.79999 113.3 314 123 335.20001 123 c
343.70001 123 350.29999 121.2 355.79999 117.6 c
361.79999 113.1 364.89999 106.7 364.89999 98.900002 c
364.89999 95.300003 363.39999 93.5 360.39999 93.5 c
358.29999 93.5 356.79999 95.300003 355.89999 98.900002 c
355.29999 101.9 354.10001 104.6 352.60001 107.4 c
349.89999 112.2 344.10001 114.4 335.10001 114.4 c
327.20001 114.4 321.79999 112.6 318.5 108.7 c
315.5 105.1 313.70001 99.599998 313.70001 91.5 c
313.70001 60.099998 l
313.70001 51.900002 315.5 46.200001 318.79999 42.599998 c
322.39999 38.700001 327.89999 36.599998 335.70001 36.599998 c
347.5 36.599998 354.39999 40.799999 355.89999 49 c
356.5 52 356.79999 53.5 356.79999 53.799999 c
357.39999 55.599998 358.60001 56.5 360.39999 56.5 c
363.39999 56.5 364.89999 54.700001 364.89999 51.099998 c
364.89999 43.5 361.89999 37.799999 355.5 33.299999 c
350.39999 30 344 28.200001 335.60001 28.200001 c
325.89999 28.200001 318.39999 30.299999 312.89999 34.799999 c
306.5 39 303.79999 46.200001 303.79999 55.599998 c
303.79999 55.599998 l
303.79999 55.599998 l
h
303.79999 55.599998 m
W*
0 0 1108 128 rc
298.79999 128 m
369.89999 128 l
369.89999 23.200001 l
298.79999 23.200001 l
h
f
Q
q
378.70001 50.5 m
378.70001 75.300003 l
378.70001 90.400002 389 98 409.20001 98 c
429.39999 98 439.70001 90.400002 439.70001 75.300003 c
439.70001 50.5 l
439.70001 35.400002 429.70001 27.799999 409.79999 27.799999 c
388.70001 27.5 378.70001 35.099998 378.70001 50.5 c
378.70001 50.5 l
378.70001 50.5 l
h
430.70001 50.5 m
430.70001 75.300003 l
430.70001 84.699997 423.39999 89.5 408.60001 89.5 c
394.70001 89.5 387.39999 84.699997 387.39999 75.300003 c
387.39999 50.5 l
387.39999 41.099998 394.70001 36.299999 409.20001 36.599998 c
423.39999 36.299999 430.70001 40.799999 430.70001 50.5 c
430.70001 50.5 l
h
430.70001 50.5 m
W*
0 0 1108 128 rc
373.70001 103 m
444.70001 103 l
444.70001 22.791454 l
373.70001 22.791454 l
h
f
Q
q
505.89999 36 m
501.70001 33 498 30.9 495 29.700001 c
491.70001 28.5 487.39999 27.9 482.60001 27.9 c
474.39999 27.9 467.79999 29.700001 462.70001 33 c
457 36.900002 453.89999 42.700001 453.89999 50.5 c
453.89999 75.900002 l
453.89999 83.5 456.89999 89.199997 462.39999 93.099998 c
467.20001 96.400002 473.89999 98.199997 481.39999 98.199997 c
486.5 98.199997 490.79999 97.599998 494.10001 96.400002 c
497.39999 95.199997 501.10001 93.099998 505 89.800003 c
505 120.9 l
505 125.1 506.5 127.2 509.20001 127.2 c
512.20001 127.2 513.70001 125.1 513.70001 120.9 c
513.70001 32 l
513.70001 29 512.20001 27.5 509.5 27.5 c
507.70001 27.5 506.5 28.4 506.20001 30.5 c
506.20001 32 505.89999 33.5 505.89999 36 c
505.89999 36 l
505.89999 36 l
h
505.60001 45.900002 m
505.60001 80.699997 l
501.39999 83.699997 497.70001 86.099998 495.29999 87 c
491.70001 88.5 487.70001 89.099998 483.5 89.099998 c
478.10001 89.099998 473.20001 88.199997 469.89999 86.099998 c
465.70001 83.400002 463.29999 79.5 463.29999 74.599998 c
463.29999 50.700001 l
463.29999 45.599998 465.39999 41.599998 469.89999 39.200001 c
473.5 37.400002 478.10001 36.200001 483.79999 36.200001 c
488.29999 36.200001 492.60001 36.799999 495.89999 38.299999 c
498.70001 40.200001 502 42.599998 505.60001 45.900002 c
505.60001 45.900002 l
505.60001 45.900002 l
h
505.60001 45.900002 m
W*
0 0 1108 128 rc
448.89999 132.2 m
518.70001 132.2 l
518.70001 22.5 l
448.89999 22.5 l
h
f
Q
q
538.90002 61.299999 m
538.90002 51.599998 l
538.90002 41.299999 546.20001 36.200001 561 36.200001 c
566.40002 36.200001 570.70001 36.799999 574 38 c
575.79999 38.599998 578.79999 40.099998 583.09998 43.099998 c
585.79999 45.5 587.59998 46.700001 588.5 46.700001 c
590.90002 46.700001 592.09998 45.5 592.09998 42.799999 c
592.09998 40.099998 590.29999 37.400002 586.70001 34.599998 c
581 30.1 572.20001 27.6 560.70001 27.6 c
540.5 27.6 530.20001 35.5 530.20001 51.5 c
530.20001 75.699997 l
530.20001 81.099998 532.29999 86 536.5 89.900002 c
541.90002 95.300003 550.40002 97.800003 561.29999 97.800003 c
581.20001 97.800003 590.90002 87.800003 590.90002 68.199997 c
590.90002 63.400002 589.09998 60.900002 585.5 60.900002 c
539 60.900002 l
539 61.299999 l
538.90002 61.299999 l
h
538.90002 69.800003 m
582.09998 69.800003 l
582.09998 82.800003 574.79999 89.400002 560 89.400002 c
554.59998 89.400002 549.70001 88.199997 545.5 85.800003 c
541 82.800003 538.90002 79.199997 538.90002 74.900002 c
538.90002 69.800003 l
538.90002 69.800003 l
h
538.90002 69.800003 m
W*
0 0 1108 128 rc
525.20001 102.8 m
597.09998 102.8 l
597.09998 22.6 l
525.20001 22.6 l
h
f
Q
q
606.90002 55.599998 m
606.90002 93.400002 l
606.90002 113.3 617.20001 123 638.29999 123 c
646.79999 123 653.40002 121.2 658.90002 117.6 c
664.90002 113.1 668 106.7 668 98.900002 c
668 95.300003 666.5 93.5 663.5 93.5 c
661.40002 93.5 659.90002 95.300003 659 98.900002 c
658.40002 101.9 657.20001 104.6 655.70001 107.4 c
653 112.2 647.20001 114.4 638.20001 114.4 c
630.29999 114.4 624.90002 112.6 621.59998 108.7 c
618.59998 105.1 616.79999 99.599998 616.79999 91.5 c
616.79999 60.099998 l
616.79999 51.900002 618.59998 46.200001 621.90002 42.599998 c
625.5 38.700001 631 36.599998 638.79999 36.599998 c
650.59998 36.599998 657.5 40.799999 659 49 c
659.59998 52 659.90002 53.5 659.90002 53.799999 c
660.5 55.599998 661.70001 56.5 663.5 56.5 c
666.5 56.5 668 54.700001 668 51.099998 c
668 43.5 665 37.799999 658.59998 33.299999 c
653.5 30 647.09998 28.200001 638.70001 28.200001 c
629 28.200001 621.5 30.299999 616 34.799999 c
609.90002 39 606.90002 46.200001 606.90002 55.599998 c
606.90002 55.599998 l
606.90002 55.599998 l
h
606.90002 55.599998 m
W*
0 0 1108 128 rc
601.90002 128 m
673 128 l
673 23.200001 l
601.90002 23.200001 l
h
f
Q
q
730.5 36 m
726.29999 33 722.59998 30.6 720.20001 29.700001 c
717.20001 28.5 713.20001 27.9 708.40002 27.9 c
701.09998 27.9 695.09998 29.4 690.59998 32.400002 c
685.20001 36 682.40002 41.5 682.40002 48.400002 c
682.40002 55.400002 685.40002 61.099998 690.90002 64.699997 c
695.70001 68.300003 702.09998 70.099998 709.29999 70.099998 c
715.29999 70.099998 722 68.599998 729.90002 65.900002 c
729.90002 76.5 l
729.90002 81.599998 727.5 85.300003 722.59998 87.400002 c
719.29999 88.900002 715 89.5 710.20001 89.5 c
698.70001 89.5 692.70001 86.5 691.5 80.099998 c
690.90002 77.099998 690.59998 75.900002 690.59998 75.599998 c
690 74.099998 688.79999 73.5 687 73.5 c
684 73.5 682.20001 75.300003 682.20001 78.599998 c
682.20001 83.099998 684 87.400002 687.59998 91.300003 c
691.79999 96.099998 700 98.599998 711.20001 98.599998 c
720.29999 98.599998 726.59998 97.099998 731.09998 94.400002 c
736.20001 90.800003 739 84.699997 739 76.300003 c
739 45.5 l
739 41.900002 739.59998 39.5 741.09998 38.200001 c
741.40002 37.900002 742.90002 37.299999 745.29999 36.400002 c
746.79999 35.799999 747.40002 34.599998 747.40002 32.200001 c
747.40002 29.799999 746.20001 28.6 743.5 28.6 c
742.90002 28.6 741.70001 28.9 739.59998 29.5 c
736.29999 30.700001 734.20001 31.299999 733.59998 31.6 c
732 31.700001 731.09998 33.5 730.5 36 c
730.5 36 l
730.5 36 l
h
730.20001 45 m
730.20001 57.700001 l
723.59998 59.799999 716.90002 61 711.20001 61 c
698.20001 61 691.59998 56.799999 691.59998 48.299999 c
691.59998 44.099998 693.40002 40.400002 697.29999 38.599998 c
700.29999 36.799999 704.29999 35.900002 709.09998 35.900002 c
713.29999 35.900002 717 36.5 720.59998 38.299999 c
722.90002 39.599998 726.29999 42 730.20001 45 c
730.20001 45 l
730.20001 45 l
h
730.20001 45 m
W*
0 0 1108 128 rc
677.20001 103.6 m
752.40002 103.6 l
752.40002 22.9 l
677.20001 22.9 l
h
f
Q
q
764.29999 90.699997 m
766.40002 93.400002 768.5 95.199997 769.70001 96.099998 c
771.5 97.300003 773.90002 97.900002 777.29999 97.900002 c
782.09998 97.900002 786.40002 95.5 790 90.300003 c
792.40002 93.300003 794.5 95.099998 796.59998 96 c
798.70001 97.199997 801.70001 97.800003 805.09998 97.800003 c
815.40002 97.800003 820.79999 92.699997 820.79999 82.699997 c
820.79999 33.700001 l
820.79999 29.5 819.29999 27.700001 816.29999 27.700001 c
813.29999 27.700001 812.09998 29.5 812.09998 33.700001 c
812.09998 79.599998 l
812.09998 85.900002 809.40002 89.300003 804.20001 89.300003 c
800.29999 89.300003 796.29999 86.900002 793 82.300003 c
793 33.299999 l
793 29.1 791.5 27.299999 788.79999 27.299999 c
786.09998 27.299999 784.59998 29.1 784.59998 33.299999 c
784.59998 78.599998 l
784.59998 85.599998 781.59998 88.900002 776.09998 88.900002 c
772.5 88.900002 769.09998 86.5 765.5 81.900002 c
765.5 33.200001 l
765.5 29 764 27.200001 761 27.200001 c
758 27.200001 756.79999 29 756.79999 33.200001 c
756.79999 93.300003 l
756.79999 96.300003 758 97.5 760.40002 97.5 c
761.59998 97.5 762.79999 96.599998 763.40002 94.800003 c
764 94 764.29999 92.5 764.29999 90.699997 c
764.29999 90.699997 l
764.29999 90.699997 l
h
764.29999 90.699997 m
W*
0 0 1108 128 rc
751.79999 102.9 m
825.79999 102.9 l
825.79999 22.200001 l
751.79999 22.200001 l
h
f
Q
q
842.90002 90.699997 m
849.5 95.5 857.70001 98 866.5 98 c
884.90002 98 894 90.099998 894 75 c
894 49.900002 l
894 42.599998 891.29999 37.200001 886.09998 33 c
881.59998 29.4 875.20001 27.6 867.40002 27.6 c
858 27.6 849.90002 30 842.90002 35.200001 c
842.90002 6.8000002 l
842.90002 2.5999999 841.40002 0.2 838.70001 0.2 c
836 0.2 834.5 2.3 834.5 6.8000002 c
834.5 91.699997 l
834.5 95.900002 835.70001 98.300003 838.09998 98.300003 c
839.29999 98.300003 840.5 97.400002 841.40002 95.599998 c
841.70001 94 842.59998 92.199997 842.90002 90.699997 c
842.90002 90.699997 l
842.90002 90.699997 l
h
842.90002 44.700001 m
849.20001 39.299999 856.79999 36.200001 865.90002 36.200001 c
871.29999 36.200001 875.90002 37.099998 879.20001 39.200001 c
883.40002 41.599998 885.20001 45.200001 885.20001 49.799999 c
885.20001 74.900002 l
885.20001 80.300003 883.09998 84 878.59998 86.400002 c
875.29999 88.199997 870.70001 89.099998 865 89.099998 c
859.90002 89.099998 855.90002 88.5 852.59998 87 c
849.59998 85.800003 846.59998 83.099998 842.59998 79.099998 c
842.59998 44.599998 l
842.90002 44.599998 l
842.90002 44.700001 l
h
842.90002 44.700001 m
W*
0 0 1108 128 rc
829.5 103.3 m
899 103.3 l
899 -4.8000002 l
829.5 -4.8000002 l
h
f
Q
q
923.90002 68.599998 m
923.90002 87.599998 930.5 104.6 943.79999 119.7 c
948.59998 125.1 952.59998 127.9 955.29999 127.9 c
956.20001 127.9 957.09998 127.6 958 127 c
958.59998 126.4 959.20001 125.5 959.20001 124.6 c
959.20001 123.1 957.40002 121 954.09998 117.6 c
940.20001 104.3 933.20001 88 933.20001 68.300003 c
933.20001 46.5 940.5 29 954.70001 15.4 c
957.70001 12.7 958.90002 10.6 958.90002 8.8000002 c
958.90002 7.9000001 958.29999 7 957.70001 6.0999999 c
957.09998 5.5 955.90002 4.9000001 955 4.9000001 c
951.70001 4.9000001 947.09998 8.8000002 941.09998 16.4 c
929.40002 30.799999 923.90002 48 923.90002 68.599998 c
923.90002 68.599998 l
923.90002 68.599998 l
h
923.90002 68.599998 m
W*
0 0 1108 128 rc
918.90002 132.89999 m
964.20001 132.89999 l
964.20001 -0.1 l
918.90002 -0.1 l
h
f
Q
q
1107.1 63.799999 m
1107.1 44.799999 1100.5 27.799999 1087.2 12.7 c
1082.4 7.3000002 1078.4 4.5 1075.7 4.5 c
1074.8 4.5 1073.9 4.8000002 1073 5.4000001 c
1072.4 6 1071.8 7.1999998 1071.8 8.1000004 c
1071.8 9.6000004 1073.6 11.7 1076.9 14.7 c
1090.8 28 1097.8 44.299999 1097.8 64 c
1097.8 85.800003 1090.5 103.3 1076.3 116.9 c
1073.3 119.6 1072.1 121.7 1072.1 123.5 c
1072.1 124.4 1072.7 125.3 1073.3 126.2 c
1073.9 126.8 1075.1 127.4 1076 127.4 c
1079 127.4 1083.9 123.5 1089.9 115.9 c
1101 101.5 1107.1 84.300003 1107.1 63.799999 c
1107.1 63.799999 l
1107.1 63.799999 l
h
1107.1 63.799999 m
W*
0 0 1108 128 rc
1066.8 132.39999 m
1112.1 132.39999 l
1112.1 -0.5 l
1066.8 -0.5 l
h
f
Q
1 1 1 sc
q
1057.4807 8.6657 m
973.65063 8.6657 l
970.64777 8.6657 968.39563 10.91785 968.39563 13.920718 c
968.39563 16.923586 970.64777 19.175735 973.65063 19.175735 c
1057.4807 19.175735 l
1060.4835 19.175735 1062.7357 16.923586 1062.7357 13.920718 c
1061.985 10.91785 1060.4835 8.6657 1057.4807 8.6657 c
1057.4807 8.6657 l
h
1057.4807 8.6657 m
W*
0 0 1108 128 rc
963.39563 24.175735 m
1067.7357 24.175735 l
1067.7357 3.6657002 l
963.39563 3.6657002 l
h
f
Q
0 0.39215687 0 sc
q
997.70001 117.6 m
997.70001 117.6 1004.7 112.8 1004.7 104 c
1004.7 88.900002 984.09998 72.300003 984.09998 56.599998 c
984.09998 39.700001 997.09998 28.799999 1009.5 25.5 c
1011.3 25.200001 1011.9 27 1009.8 27.6 c
1004.7 28.799999 999.20001 35.5 999.20001 45.700001 c
999.20001 55.400002 1008.6 59 1012.2 63.5 c
1016.1 68.300003 1015.2 74.400002 1012.8 76.199997 c
1010.4 78 1012.2 80.400002 1016.1 77.400002 c
1020 74.699997 1023.4 69.199997 1022.1 64.400002 c
1020.6 58.099998 1022.7 54.400002 1026 53.799999 c
1029.3 53.200001 1033 55 1032.6 58 c
1032.2 61 1030.5 64.300003 1031.4 64.300003 c
1033.8 64.300003 1038.7 58.599998 1038.7 49.200001 c
1038.7 39.799999 1031.1 33.5 1028.7 31.1 c
1027.2 29.6 1029 27.799999 1031.1 28.700001 c
1032 29 1034.1 30.200001 1035.3 31.1 c
1041.3 35.299999 1050.7 44.099998 1050.7 60.099998 c
1050.7 77 1044.4 84.599998 1037.7 90.900002 c
1031.1 97.199997 1029.5 95.699997 1031.4 92.400002 c
1036.8 83 1033.5 79.699997 1029.6 79.699997 c
1024.8 79.699997 1024.8 90.300003 1022.6 98.400002 c
1018.7 116.5 1002 119.6 999 119.9 c
996.79999 120.9 994 119.1 997.70001 117.6 c
997.70001 117.6 l
h
997.70001 117.6 m
W*
0 0 1108 128 rc
979.09998 125.1888 m
1055.7 125.1888 l
1055.7 20.466539 l
979.09998 20.466539 l
h
f
ep
end
%%Trailer
%%EOF
